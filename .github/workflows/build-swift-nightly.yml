name: Build Swift Nightly

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Swift Nighly Branch'
        required: true
        default: 'development'
        type: choice
        options:
          - swift-6.0-branch
          - swift-6.1-branch
          - swift-6.2-branch
          - development
      distribution:
        description: 'Distribution'
        required: true
        default: 'debian-bookworm'
        type: choice
        options:
          - ubuntu-focal
          - ubuntu-jammy
          - ubuntu-noble
          - debian-bullseye
          - debian-bookworm
          - debian-trixie
          - raspios-bullseye
          - raspios-bookworm
          - raspios-trixie

jobs:
  nightly:
    strategy:
      fail-fast: false
      matrix:
        branch: ["swift-6.0.3-branch", "development"]
    env:
      SWIFT_TAG:
      SWIFT_BRANCH: ${{ matrix.branch }}
      SWIFT_PLATFORM: ubuntu2204
      SWIFT_VERSION: ${{ matrix.branch }}
      SWIFT_WORKSPACE_CACHE: swift-workspace
    name: Build Swift Nigtly
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Get Latest Nightly Version
      shell: bash
      run: |
        export $(curl https://download.swift.org/${{ env.SWIFT_BRANCH }}/${{ env.SWIFT_PLATFORM }}/latest-build.yml | grep 'dir:' | sed 's/:[^:\/\/]/=/g')
        echo "Latest Tag on ${{ env.SWIFT_BRANCH }} Branch: $dir"
        echo "SWIFT_TAG=$(echo $dir)" >> $GITHUB_ENV
    - uses: ./.github/actions/checkout-swift
      name: Fetch Swift Sources
      with:
        swift-tag: ${{ env.SWIFT_TAG }}
        swift-workspace-cache: ${{ env.SWIFT_WORKSPACE_CACHE }}
    - name: Build Swift Nightly Container
      shell: bash
      run: ./swift-builder/build-container.sh
    - uses: ./.github/actions/build-for-distribution
      name: Build & Publish Swift
      with:
        swift-tag: ${{ env.SWIFT_TAG }}
        swift-target-arch: armv7
        distribution: ${{ env.DISTRIBUTION }}
        builder-tag: ${{ env.SWIFT_VERSION }}
